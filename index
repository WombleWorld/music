<!doctype html>
<html lang="en">
<head>
<meta charset="utf-8">
<title>WombleWorld: 00s Indie Band Match</title>
<meta name="viewport" content="width=device-width, initial-scale=1">
<style>
  body{font-family:system-ui,-apple-system,Segoe UI,Roboto,Arial,sans-serif;margin:0;background:#0b1f3a;color:#fff}
  header{padding:18px 16px;background:#142a52}
  h1{margin:0;font-size:20px}
  #game{max-width:900px;margin:20px auto;padding:16px}
  .board{display:grid;grid-template-columns:1fr 1fr;gap:16px}
  .panel{background:#11264a;border:1px solid #264774;border-radius:8px;padding:16px;min-height:220px}
  .band{display:flex;align-items:center;justify-content:center;height:180px;font-size:28px;font-weight:700;text-align:center}
  .choices button{display:block;width:100%;text-align:left;margin:8px 0;padding:10px 12px;border-radius:6px;border:1px solid #2f538a;background:#18335f;color:#fff;cursor:pointer}
  .choices button:hover{background:#20406f}
  .row{display:flex;gap:10px;align-items:center;margin-top:10px}
  .pill{background:#264774;border-radius:999px;padding:6px 10px;font-size:12px}
  .bar{height:10px;background:#264774;border-radius:6px;overflow:hidden}
  .fill{height:100%;width:0;background:#ffd200}
  .footer{opacity:.85;margin-top:10px;font-size:12px}
  .correct{outline:2px solid #5ad37c}
  .wrong{outline:2px solid #e25d5d}
  .small{font-size:12px;opacity:.9}
  .muted{opacity:.7}
</style>
</head>
<body>
<header>
  <h1>WombleWorld presents: Match the Don to the 00s Indie Band</h1>
</header>

<div id="game">
  <div class="row">
    <div class="pill" id="round">Round 1/10</div>
    <div class="pill" id="score">Score 0</div>
    <div class="pill" id="streak">Streak 0</div>
    <div class="pill">Mode: <span id="modeName">Normal</span></div>
  </div>

  <div style="margin:10px 0">
    <div class="bar"><div class="fill" id="timerFill"></div></div>
    <div class="small muted" id="hint">Pick the player who screams this band’s vibe. No, not you, WUP.</div>
  </div>

  <div class="board">
    <div class="panel">
      <div class="band" id="bandCard">Loading…</div>
      <div class="footer small">WombleWorld verdicts are legally binding in the court of pub chat.</div>
    </div>
    <div class="panel">
      <div class="choices" id="choices"></div>
      <div class="row">
        <button id="skipBtn" class="pill" style="cursor:pointer;background:#20406f;border:1px solid #2f538a">Skip</button>
        <button id="hardBtn" class="pill" style="cursor:pointer;background:#6b3fbf;border:1px solid #8d62da">Hard Mode</button>
        <button id="resetBtn" class="pill" style="cursor:pointer;background:#3a5f20;border:1px solid #6fa64b">Reset</button>
      </div>
      <div class="footer small muted">Hard mode removes obvious decoys and adds a timer. Like an SGM with proxy votes but fun.</div>
    </div>
  </div>
</div>

<script>
/* ---------- Data: tweak freely ---------- */
const PAIRS = [
  // Players are current/recent AFCW names you use often. Bands are 00s indie.
  // Change the mapping to your taste. Keep it playful.
  {player:"Matty Stevens", band:"Kaiser Chiefs", quip:"Fox in the box. Shouts I Predict A Goal."},
  {player:"Nathan Bishop", band:"Bloc Party", quip:"Shot-stopper with Silent Alarm reflexes."},
  {player:"Marcus Browne", band:"Franz Ferdinand", quip:"Take Me Out. Then take two more."},
  {player:"Jake Reeves", band:"Arctic Monkeys", quip:"Do I Wanna Know if he runs the midfield. Yes."},
  {player:"Ryan Johnson", band:"Editors", quip:"Cold steel. Low heart rate. High line okay."},
  {player:"Omar Bugiel", band:"Kasabian", quip:"Underrated chaos. Club Foot energy."},
  {player:"Josh Kelly", band:"The Kooks", quip:"Naive no. Nifty yes."},
  {player:"Alistair Smith", band:"Foals", quip:"Press. Pass. Patter. Total Life Forever legs."},
  {player:"Steve Seddon", band:"The Libertines", quip:"Attacks with shambolic intent. Usually works."},
  {player:"Myles Hippolyte", band:"Bombay Bicycle Club", quip:"Floaty. Clever. Lovely patterns."},
  {player:"Riley Harbottle", band:"The Strokes", quip:"Angles clean. Lines tidy. Very 2001."}
];
// Extra decoys. Add or remove as squads change.
const EXTRA_PLAYERS = ["Danilo Orsi","Antwoine Hackford","Callum Maycock","Omar Bugiel","Josh Kelly","Nathan Asiimwe","Patrick Bauer","Jake Reeves","Marcus Browne","Alistair Smith","Ryan Johnson","Steve Seddon","Myles Hippolyte","Riley Harbottle","Nathan Bishop"];

function shuffle(a){for(let i=a.length-1;i>0;i--){const j=Math.floor(Math.random()*(i+1));[a[i],a[j]]=[a[j],a[i]]}return a}

let deck = [];
let idx = 0;
let score = 0;
let streak = 0;
let hard = false;
let timer=null, t=0, maxT=12;

const bandEl = document.getElementById('bandCard');
const choicesEl = document.getElementById('choices');
const roundEl = document.getElementById('round');
const scoreEl = document.getElementById('score');
const streakEl = document.getElementById('streak');
const timerFill = document.getElementById('timerFill');
const modeName = document.getElementById('modeName');
const hintEl = document.getElementById('hint');

document.getElementById('skipBtn').onclick = () => next(true);
document.getElementById('resetBtn').onclick = init;
document.getElementById('hardBtn').onclick = () => { hard = !hard; modeName.textContent = hard ? "Hard" : "Normal"; next(true); };

function init(){
  deck = shuffle([...PAIRS]);
  idx = 0; score = 0; streak = 0; updateHud();
  next(true);
}
function updateHud(){
  roundEl.textContent = `Round ${Math.min(idx+1, deck.length)}/${deck.length}`;
  scoreEl.textContent = `Score ${score}`;
  streakEl.textContent = `Streak ${streak}`;
}
function startTimer(){
  clearInterval(timer); t = maxT;
  timerFill.style.width = "100%";
  timer = setInterval(()=>{
    t -= 0.1;
    timerFill.style.width = `${Math.max(0, t/maxT*100)}%`;
    if(t<=0){ clearInterval(timer); lockChoices(false,true); setTimeout(()=>next(false), 600); }
  },100);
}
function stopTimer(){ clearInterval(timer); timerFill.style.width = hard ? `${Math.max(0, t/maxT*100)}%` : "0" }

function makeRound(){
  const card = deck[idx];
  bandEl.textContent = card.band;
  hintEl.textContent = card.quip;
  // Build options
  const pool = new Set([card.player]);
  const roster = Array.from(new Set([...EXTRA_PLAYERS, ...PAIRS.map(p=>p.player)])).filter(n=>n!==card.player);
  shuffle(roster);
  const optionCount = hard ? 5 : 6;
  while(pool.size<optionCount) pool.add(roster.pop());
  const opts = shuffle([...pool]);
  choicesEl.innerHTML = "";
  opts.forEach(name=>{
    const btn = document.createElement('button');
    btn.textContent = name;
    btn.onclick = () => pick(name, card.player, btn);
    choicesEl.appendChild(btn);
  });
  if(hard) startTimer(); else stopTimer();
}
function lockChoices(correctBtn, timedOut=false){
  [...choicesEl.children].forEach(b=>{
    b.disabled = true;
    if(correctBtn && b===correctBtn) b.classList.add('correct');
  });
  if(timedOut){
    [...choicesEl.children].forEach(b=>{
      if(b.textContent === deck[idx].player) b.classList.add('correct');
    });
  }
}
function pick(choice, answer, btn){
  stopTimer();
  const correct = choice===answer;
  if(correct){ score += hard?2:1; streak += 1; btn.classList.add('correct'); }
  else { streak = 0; btn.classList.add('wrong'); }
  lockChoices(btn);
  updateHud();
  setTimeout(()=> next(correct), 600);
}
function next(wasCorrectOrSkipped){
  stopTimer();
  idx++;
  if(idx>=deck.length){
    bandEl.textContent = "Full time.";
    choicesEl.innerHTML = "";
    hintEl.textContent = verdict();
    return;
  }
  updateHud();
  makeRound();
}
function verdict(){
  if(score >= deck.length*0.9) return "Elite taste. Promotion form. Somewhere an ESG report applauds your methodology.";
  if(score >= deck.length*0.6) return "Solid mid-table. Needs a cup run. DTB will schedule a working group.";
  return "You’ve been reading WUP again. Step away from the catastrophising and try Normal mode.";
}

init();
</script>
</body>
</html>
